---
import {
  hiddenClassName,
  IframeConfig,
  iframeId,
  IframeTypes,
} from "../jira-utils";
export interface Props {
  iframeType: IframeTypes;
}
const { iframeType } = Astro.props;
export const iframeConfig: IframeConfig = {
  issueKey: "issueKey",
  addonKey: "addonKey",
  restBase: "restBase",
};
const localBaseUrl = "localBaseUrl";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="ap-local-base-url" content={localBaseUrl} />
    <meta name="viewport" content="width=device-width" />
    <title>Allure TestOps for Jira</title>
  </head>
  <body>
    <iframe
      frameborder="0"
      scrolling="no"
      id={iframeId}
      class:list={["allure-iframe", hiddenClassName]}></iframe>
    <style is:inline>
      .allure-iframe {
        height: 62px;
        width: 100%;
        padding: 0;
        margin: 0;
        border: none;
        overflow: hidden;
      }
      .hidden {
        display: none;
      }
    </style>
    <!-- In astro you can't use define:vars and import inside one script so we use this workaround-->
    <script define:vars={{ iframeType, iframeConfig }}>
      window.iframeType = iframeType;
      window.iframeConfig = iframeConfig;
    </script>
    <script>
      import { initIframe } from "../jira-utils";
      initIframe((window as any).iframeType, (window as any).iframeConfig);
    </script>
  </body>
</html>
